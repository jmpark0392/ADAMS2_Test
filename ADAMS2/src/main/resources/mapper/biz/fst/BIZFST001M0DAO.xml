<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rds.adams.web.biz.fst.dao.BIZFST001M0DAO">
    <select id="selectList" parameterType="com.rds.adams.web.biz.fst.dto.BIZFST001M0P0DTO" resultType="com.rds.adams.web.biz.fst.dto.BIZFST001M0R0DTO">
      WITH 
          LVL4 AS (
                    SELECT 
                           ATIT_CD                AS ATIT_CD
                         , BAS_AMT                AS BAS_AMT
                         , DR_AMT                 AS DR_AMT
                         , CR_AMT                 AS CR_AMT
                         , ENTM_AMT               AS ENTM_AMT
                         , FNL_UPD_EMP_NO         AS FNL_UPD_EMP_NO
                         , FNL_UPD_DTM            AS FNL_UPD_DTM
                      FROM TB_FS_LST 
                     WHERE 1=1
                 <if test= 'csNo != "999"'>
                   AND CS_NO        = #{csNo}
                 </if>
                   AND STD_YYMM = #{stdYymm} 
                   AND FS_DV_CD = 'BS'   --STD_YYMM , FS_DV_CD  변수
              )
        , LVL3 AS (
                    SELECT 
                           B.HGRK_ATIT_CD          AS ATIT_CD
                         , SUM( BAS_AMT )          AS BAS_AMT
                         , SUM( DR_AMT )           AS DR_AMT
                         , SUM( CR_AMT )           AS CR_AMT
                         , SUM( ENTM_AMT )         AS ENTM_AMT
                         , MAX( A.FNL_UPD_EMP_NO ) AS FNL_UPD_EMP_NO
                         , MAX( A.FNL_UPD_DTM )    AS FNL_UPD_DTM
                      FROM LVL4 A
                      INNER JOIN TB_ATIT_MNG_LST B
                        ON A.ATIT_CD = B.ATIT_CD
                     WHERE 1=1
                       AND B.AC_LVL_CD = '4'
                     <if test= 'csNo != "999"'>
                       AND B.CS_NO     = #{csNo}
                     </if>
                 GROUP BY B.HGRK_ATIT_CD 
              )
        , LVL2 AS (
                    SELECT 
                           B.HGRK_ATIT_CD          AS ATIT_CD
                         , SUM( BAS_AMT )          AS BAS_AMT
                         , SUM( DR_AMT )           AS DR_AMT
                         , SUM( CR_AMT )           AS CR_AMT
                         , SUM( ENTM_AMT )         AS ENTM_AMT
                         , MAX( A.FNL_UPD_EMP_NO ) AS FNL_UPD_EMP_NO
                         , MAX( A.FNL_UPD_DTM )    AS FNL_UPD_DTM
                      FROM LVL3 A
                      INNER JOIN TB_ATIT_MNG_LST B
                        ON A.ATIT_CD = B.ATIT_CD
                     WHERE 1=1
                       AND B.AC_LVL_CD = '3'
                     <if test= 'csNo != "999"'>
                       AND B.CS_NO     = #{csNo}
                     </if>
                 GROUP BY B.HGRK_ATIT_CD 
              ) 
        , LVL1 AS (
                    SELECT 
                           B.HGRK_ATIT_CD          AS ATIT_CD
                         , SUM( BAS_AMT )          AS BAS_AMT
                         , SUM( DR_AMT )           AS DR_AMT
                         , SUM( CR_AMT )           AS CR_AMT
                         , SUM( ENTM_AMT )         AS ENTM_AMT
                         , MAX( A.FNL_UPD_EMP_NO ) AS FNL_UPD_EMP_NO
                         , MAX( A.FNL_UPD_DTM )    AS FNL_UPD_DTM
                      FROM LVL2 A
                      INNER JOIN TB_ATIT_MNG_LST B
                        ON A.ATIT_CD = B.ATIT_CD
                     WHERE 1=1
                       AND B.AC_LVL_CD = '2'
                     <if test= 'csNo != "999"'>
                       AND B.CS_NO     = #{csNo}
                     </if>
                     GROUP BY B.HGRK_ATIT_CD 
                  )
        SELECT
               ROW_NUMBER() OVER(ORDER BY (SELECT 1)) AS rowNumber     /* 행번호 */
             , AA.ATIT_CD                             AS atitCd        /* 계정과목코드 */
             , BB.HGRK_ATIT_CD                        AS hgrkAtitCd    /* 상위계정과목코드 */
             , BB.ATIT_ENG_NM                         AS atitNm        /* 계정과목명 */
             , BAS_AMT                                AS basAmt        /* 기초금액 */
             , DR_AMT                                 AS drAmt         /* 차변금액 */
             , CR_AMT                                 AS crAmt         /* 대변금액 */
             , ENTM_AMT                               AS entmAmt       /* 기말금액 */
             , CC.USR_NM                              AS frstRegEmpNo  /* 최초등록사원번호 */
             , CONVERT(CHAR(10), AA.FNL_UPD_DTM, 23)  AS frstRegDtm    /* 최초등록일시 */
             , BB.AC_LVL_CD                           AS levelCd       /* 메뉴레벨코드 */
          FROM (
                           SELECT * FROM LVL4
                 UNION ALL SELECT * FROM LVL3
                 UNION ALL SELECT * FROM LVL2
                 UNION ALL SELECT * FROM LVL1
               ) AA 
          INNER JOIN TB_ATIT_MNG_LST BB 
            ON AA.ATIT_CD = BB.ATIT_CD
          LEFT OUTER JOIN TB_USR_MNG_LST CC
            ON AA.FNL_UPD_EMP_NO = CC.USR_ID
         WHERE 1=1
         <if test='csNo != "999"'>
           AND BB.CS_NO = #{csNo}
         </if>
         <if test='searchTxt != ""'>
           AND (
                   AA.ATIT_CD     LIKE '%' + #{searchTxt} + '%'
                OR BB.ATIT_ENG_NM LIKE '%' + #{searchTxt} + '%'
               )
         </if>
         ORDER BY BB.ORD_SEQ
    </select>
    <delete id="deleteListBf" parameterType="com.rds.adams.web.biz.fst.dto.BIZFST001M0P1DTO">
        DELETE FROM TB_FS_LST
         WHERE STD_YYMM = #{stdYymm}
           AND CS_NO    = #{csNo}
    </delete>
    <insert id="insertList" parameterType="com.rds.adams.web.biz.fst.dto.BIZFST001M0P1DTO">
        INSERT INTO [dbo].[TB_FS_LST] (
              [CS_NO]
            , [STD_YYMM]
            , [ATIT_CD]
            , [FS_DV_CD]
            , [BAS_AMT]
            , [DR_AMT]
            , [CR_AMT]
            , [ENTM_AMT]
            , [FRST_REG_EMP_NO]
            , [FRST_REG_DTM]
            , [FNL_UPD_EMP_NO]
            , [FNL_UPD_DTM]
        ) 
        SELECT
               A.CS_NO                                                           AS CS_NO
             , A.STD_YYMM                                                        AS STD_YYMM
             , A.ATIT_CD                                                         AS ATIT_CD
             , B.FS_DV_CD                                                        AS FS_DV_CD
             , 0                                                                 AS BAS_AMT
             , SUM( CASE WHEN A.DR_CR_DV_CD = 'DR' THEN A.JRNL_AMT ELSE 0 END )  AS DR_AMT
             , SUM( CASE WHEN A.DR_CR_DV_CD = 'CR' THEN A.JRNL_AMT ELSE 0 END )  AS CR_AMT
             , SUM( CASE WHEN A.DR_CR_DV_CD = 'DR' AND B.AC_DV_CD IN ('Assets','Profit')     THEN JRNL_AMT 
                         WHEN A.DR_CR_DV_CD = 'DR' AND B.AC_DV_CD IN ('Liabilities','Capitals','Loss') THEN JRNL_AMT * - 1 
                         WHEN A.DR_CR_DV_CD = 'CR' AND B.AC_DV_CD IN ('Assets','Profit')     THEN JRNL_AMT * - 1 
                         WHEN A.DR_CR_DV_CD = 'CR' AND B.AC_DV_CD IN ('Liabilities','Capitals','Loss') THEN JRNL_AMT 
                         ELSE JRNL_AMT  END 
                   )                                                             AS ENTM_AMT
             , #{usrId}                                                          AS FRST_REG_EMP_NO
             , GETDATE()                                                         AS FRST_REG_DTM
             , #{usrId}                                                          AS FNL_UPD_EMP_NO
             , GETDATE()                                                         AS FNL_UPD_DTM
          FROM TB_JNL_RST_LST A
          INNER JOIN TB_ATIT_MNG_LST B
            ON A.ATIT_CD = B.ATIT_CD
         WHERE A.STD_YYMM  = #{stdYymm}
           AND A.CS_NO     = #{csNo}
           AND A.CS_NO     = B.CS_NO
         GROUP BY A.CS_NO, A.STD_YYMM, A.ATIT_CD, B.FS_DV_CD     
    </insert>
</mapper>